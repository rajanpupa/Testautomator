package com.green.rukh.gui.frames;

import com.cedarsoftware.util.io.JsonReader;
import com.cedarsoftware.util.io.JsonWriter;
import com.green.rukh.gui.components.LeftTree;
import com.green.rukh.gui.panels.BasePanel;
import com.green.rukh.logger.Logger;
import java.awt.Dimension;
import static java.awt.SystemColor.window;
import java.awt.Toolkit;
import selenium.automation.treeelements.elements.TestPlan;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import javax.swing.JFileChooser;

/**
 *
 * @author Rajan Prasad Upadhyay
 */
public class BaseFrame extends javax.swing.JFrame {

    //other properties
    private String fileDir = null;
    private String fileName = null;

    //base panel
    com.green.rukh.gui.panels.BasePanel basePanel = new BasePanel();

    /**
     * Creates new form BaseFrame
     */
    public BaseFrame() {
        initComponents();
        // initialization code
        this.setTitle("Test Automata");
        this.setIconImage(LeftTree.createImageIcon("/icons/tree4.GIF").getImage());
        //this.set
        this.setContentPane(basePanel);
        basePanel.setParentFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New Project");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Save");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Open");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Run");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Execute");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 632, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Logger.log(Logger.Severity.INFO, "Execute command initiated.");
        this.basePanel.executeSeleniumTest();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Logger.log(Logger.Severity.INFO, "Quit command initiated.");
        System.exit(5);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        Logger.log(Logger.Severity.INFO, "Initiating save action.");
        String filename;
        String dir;
        String fullPath = null;

        JFileChooser fileChooser = new JFileChooser();
        int rVal = fileChooser.showSaveDialog(BaseFrame.this);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            filename = fileChooser.getSelectedFile().getName();
            dir = fileChooser.getCurrentDirectory().toString();
            try {
                fullPath = fileChooser.getSelectedFile().getCanonicalPath();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            Logger.log(Logger.Severity.INFO, dir + filename);
            Logger.log(Logger.Severity.INFO, fullPath.toString());

            if (fullPath != null) {
                try {
                    String json = JsonWriter.objectToJson(this.basePanel.getTestPlan());
                    Logger.log(Logger.Severity.DEBUG, json);
                    PrintWriter writer = new PrintWriter(fullPath);
                    writer.println(JsonWriter.formatJson(json));
                    writer.close();
                } catch (FileNotFoundException ex) {
                    java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (rVal == JFileChooser.CANCEL_OPTION) {
            //cancelled
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        Logger.log(Logger.Severity.INFO, "Initiating open action.");

        String filename;
        String dir;
        String fullPath = null;

        JFileChooser c = new JFileChooser();
        // Demonstrate "Open" dialog:
        int rVal = c.showOpenDialog(BaseFrame.this);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            filename = c.getSelectedFile().getName();
            dir = c.getCurrentDirectory().toString();
            try {
                fullPath = c.getSelectedFile().getCanonicalPath();
                Logger.log(Logger.Severity.INFO, fullPath);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (fullPath != null) {
                //load the test case
                try {
                    String json = new String(Files.readAllBytes(Paths.get(fullPath)), StandardCharsets.UTF_8);
                    Logger.log(Logger.Severity.DEBUG, json);
                    TestPlan tp = (TestPlan) JsonReader.jsonToJava(json);
                    this.basePanel.setTestPlan(tp);
                    this.basePanel.programaticInitialize();
                } catch (Exception e) {

                }
            }
        }
        if (rVal == JFileChooser.CANCEL_OPTION) {
            //cancelled
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BaseFrame bFrame = new BaseFrame();//.setVisible(true);
                //bFrame.setLocation(500, 100);
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                Dimension windowSize ;//= bFrame.getSize();
                windowSize = new Dimension(screenSize.width/2, screenSize.height/2);
                
                int windowX = Math.max(0, (screenSize.width - windowSize.width) / 2);
                int windowY = Math.max(0, (screenSize.height - windowSize.height) / 2);
                bFrame.setLocation(windowX, windowY);  // Don't use "f." inside constructor.
                bFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    // End of variables declaration//GEN-END:variables
}
